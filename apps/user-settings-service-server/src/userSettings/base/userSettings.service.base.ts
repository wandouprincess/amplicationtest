/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserSettings as PrismaUserSettings } from "@prisma/client";

export class UserSettingsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserSettingsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userSettings.count(args);
  }

  async userSettingsItems<T extends Prisma.UserSettingsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserSettingsFindManyArgs>
  ): Promise<PrismaUserSettings[]> {
    return this.prisma.userSettings.findMany<Prisma.UserSettingsFindManyArgs>(
      args
    );
  }
  async userSettings<T extends Prisma.UserSettingsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserSettingsFindUniqueArgs>
  ): Promise<PrismaUserSettings | null> {
    return this.prisma.userSettings.findUnique(args);
  }
  async createUserSettings<T extends Prisma.UserSettingsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserSettingsCreateArgs>
  ): Promise<PrismaUserSettings> {
    return this.prisma.userSettings.create<T>(args);
  }
  async updateUserSettings<T extends Prisma.UserSettingsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserSettingsUpdateArgs>
  ): Promise<PrismaUserSettings> {
    return this.prisma.userSettings.update<T>(args);
  }
  async deleteUserSettings<T extends Prisma.UserSettingsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserSettingsDeleteArgs>
  ): Promise<PrismaUserSettings> {
    return this.prisma.userSettings.delete(args);
  }
}
